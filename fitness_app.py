from models import session, Client, Workout, Attendance
from datetime import date
from sqlalchemy import func, desc


class FitnessApp:
    def __init__(self):
        self.session = session

    def show_menu(self):
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        while True:
            print("\n" + "=" * 50)
            print("üèãÔ∏è –§–ò–¢–ù–ï–°-–ö–õ–£–ë - –ú–ï–ù–Æ")
            print("=" * 50)
            print("1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–µ—â–µ–Ω–∏–µ")
            print("2. –¢–æ–ø –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π")
            print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤")
            print("4. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤")
            print("5. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")
            print("6. –í—ã—Ö–æ–¥")
            print("=" * 50)

            choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç—ã (1-6): ").strip()

            if choice == '1':
                self.register_attendance()
            elif choice == '2':
                self.top_visitors()
            elif choice == '3':
                self.check_memberships()
            elif choice == '4':
                self.show_all_clients()
            elif choice == '5':
                self.show_all_workouts()
            elif choice == '6':
                print("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            else:
                print("–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—É–Ω–∫—Ç—ã 1-6")

    def register_attendance(self):
        """1) –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–µ—â–µ–Ω–∏–µ (—Ç—Ä–∏–≥–≥–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∫–æ–ª-–≤–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∫—Ä–∞—Ç–Ω—ã–º 10)"""
        print("\n" + "=" * 40)
        print("–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ü–û–°–ï–©–ï–ù–ò–Ø")
        print("=" * 40)

        clients = self.session.query(Client).all()
        print("–î–û–°–¢–£–ü–ù–´–ï –ö–õ–ò–ï–ù–¢–´:")
        for client in clients:
            print(f"   {client.id}. {client.name}")

        workouts = self.session.query(Workout).all()
        print("\n–î–û–°–¢–£–ü–ù–´–ï –¢–†–ï–ù–ò–†–û–í–ö–ò:")
        for workout in workouts:
            print(f"   {workout.id}. {workout.type} -  {workout.duration} –º–∏–Ω—É—Ç ")

        try:
            client_id = int(input("\n–í–≤–µ–¥–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞: "))
            workout_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: "))

            client = self.session.query(Client).get(client_id)
            if not client:
                print("–ö–ª–∏–µ–Ω—Ç —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                return

            workout = self.session.query(Workout).get(workout_id)
            if not workout:
                print("–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                return

            new_attendance = Attendance(
                client_id=client_id,
                workout_id=workout_id
            )

            self.session.add(new_attendance)
            self.session.commit()

            print(f"‚úÖ –ü–æ—Å–µ—â–µ–Ω–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ!")
            print(f"   –ö–ª–∏–µ–Ω—Ç: {client.name}, –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞: {workout.type}, –î–∞—Ç–∞: {new_attendance.att_date}")
            print("   üí° –¢—Ä–∏–≥–≥–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–ª–∏—Ç –∞–±–æ–Ω–µ–º–µ–Ω—Ç –ø—Ä–∏ 10 –ø–æ—Å–µ—â–µ–Ω–∏—è—Ö!")

        except ValueError:
            print("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ ID")
        except Exception as e:
            self.session.rollback()
            print(f"–û—à–∏–±–∫–∞: {e}")

    def top_visitors(self):
        """2) –¢–æ–ø –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π (order_by desc, limit)"""
        print("\n" + "=" * 40)
        print("–¢–û–ü 5 –ü–û–°–ï–¢–ò–¢–ï–õ–ï–ô")
        print("=" * 40)


        top_visitors = (self.session.query(
            Client.name,
            func.count(Attendance.id).label('visit_count')
        )
                        .join(Attendance, Client.id == Attendance.client_id)
                        .group_by(Client.id, Client.name)
                        .order_by(desc('visit_count'))
                        .limit(5)
                        .all())

        if not top_visitors:
            print("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ—Å–µ—â–µ–Ω–∏—è—Ö")
            return

        print("–¢–æ–ø 5 –∫–ª–∏–µ–Ω—Ç–æ–≤:")
        for i, (name, visits) in enumerate(top_visitors, 1):
            print(f"   {i}. {name}: {visits} –ø–æ—Å–µ—â–µ–Ω–∏–π")

    def check_memberships(self):
        """3) –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤ (filter membership_end < date)"""
        print("\n" + "=" * 40)
        print("–ü–†–û–í–ï–†–ö–ê –ê–ë–û–ù–ï–ú–ï–ù–¢–û–í")
        print("=" * 40)

        today = date.today()

        expired_memberships = (self.session.query(Client)
                               .filter(Client.membership_end < today)
                               .all())

        active_memberships = (self.session.query(Client)
                              .filter(Client.membership_end >= today)
                              .all())

        print("–ü–†–û–°–†–û–ß–ï–ù–ù–´–ï –ê–ë–û–ù–ï–ú–ï–ù–¢–´:")
        if expired_memberships:
            for client in expired_memberships:
                print(f" {client.name} - –∏—Å—Ç–µ–∫ {client.membership_end}")
        else:
            print("   ‚úÖ –ù–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤")

        print(f"\n–ê–ö–¢–ò–í–ù–´–ï –ê–ë–û–ù–ï–ú–ï–ù–¢–´:")
        for client in active_memberships:
            print(f" {client.name} - –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ {client.membership_end}")

    def show_all_clients(self):
        """–í—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç—ã"""
        print("\n" + "=" * 40)
        print("–í–°–ï –ö–õ–ò–ï–ù–¢–´")
        print("=" * 40)

        clients = self.session.query(Client).all()
        if not clients:
            print("–ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ")
            return

        for client in clients:
            print(f"   {client.id}. {client.name} –ê–±–æ–Ω–µ–º–µ–Ω—Ç –¥–æ: {client.membership_end}")


    def show_all_workouts(self):
        """–í—Å–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"""
        print("\n" + "=" * 40)
        print("–í–°–ï –¢–†–ï–ù–ò–†–û–í–ö–ò")
        print("=" * 40)

        workouts = self.session.query(Workout).all()
        if not workouts:
            print("üì≠ –ù–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –±–∞–∑–µ")
            return

        for workout in workouts:
            print(f"   {workout.id}. {workout.type} –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {workout.duration} –º–∏–Ω")



# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    app = FitnessApp()
    app.show_menu()